"""
Django settings for menfp project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Charger le fichier .env
load_dotenv()

# Utiliser les variables d'environnement
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')  # Récupérer la clé secrète depuis .env
DEBUG = os.getenv('DEBUG') == 'True'  # Convertir en booléen
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')

BASE_DIR = Path(__file__).resolve().parent.parent

# Assure-toi que SECRET_KEY est défini dans le fichier .env
if not SECRET_KEY:
    raise ValueError("La variable d'environnement 'DJANGO_SECRET_KEY' doit être définie dans le fichier .env")

# CONFIGURATION DE BASE
DEBUG = DEBUG  # Utilise la valeur de DEBUG obtenue depuis .env
ALLOWED_HOSTS = ALLOWED_HOSTS  # Liste des hôtes autorisés (par exemple, 'localhost, .example.com')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'bunexe',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'menfp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'bunexe/templates'],  # Chemin vers le dossier des templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'menfp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '3306'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    'bunexe.authentication_backends.EmailOrUsernameBackend',  # Utilisation de l'email ou du username
    'django.contrib.auth.backends.ModelBackend',  # Pour garder le backend par défaut
)

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'America/Port-au-Prince'


USE_I18N = True

USE_TZ = True
import os

# Configuration email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Paramètres SMTP
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')  # Valeur par défaut : smtp.gmail.com
EMAIL_PORT = int(os.getenv('EMAIL_PORT', '587'))  # Convertir en entier, valeur par défaut : 587
EMAIL_USE_TLS = True

# Utilisateur et mot de passe
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # Récupère l'email de l'utilisateur
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # Récupère le mot de passe

# Valeur par défaut pour l'email de l'expéditeur
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', 'elconquistadorbaoulyn@gmail.com')  # Valeur par défaut


LOGIN_URL = '/connexion/'  # URL de la page de connexion
LOGOUT_REDIRECT_URL = 'accueil'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# URL pour accéder aux fichiers statiques
STATIC_URL = '/static/'

# Chemin où Django recherche les fichiers statiques
STATICFILES_DIRS = [
    BASE_DIR / "static",  # si vos fichiers statiques sont dans un dossier "static" à la racine de votre projet
]

# Ce répertoire est utilisé pour collecter tous les fichiers statiques lors de la mise en production
STATIC_ROOT = BASE_DIR / "staticfiles"  # utile lorsque vous utilisez 'collectstatic'
# URL où les fichiers médias seront accessibles
MEDIA_URL = '/media/'

# Chemin où les fichiers médias sont sauvegardés
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
